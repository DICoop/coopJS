import ono from "@jsdevtools/ono";
import axios from "axios";
import { PersonalDataIsNotConfigured } from "./errors";
class PersonalData {
    constructor(config) {
        this.config = config;
    }
    setConfig(config) {
        this.config = config;
    }
    getUrl(path) {
        if (!this.config) {
            throw ono(new PersonalDataIsNotConfigured(`personal data config is empty`));
        }
        return `${this.config.api}${path}`.replace(/\/\/+/g, '/').replace('http:/', 'http://').replace('https:/', 'https://');
    }
    post(path, data) {
        return axios.post(this.getUrl(path), data, { headers: { 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json' } }).then(r => r.data);
    }
    get(path, params) {
        return axios.get(this.getUrl(path), {
            params: params || {},
            headers: { 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json' },
        }).then(r => r.data);
    }
    sendPersonalData(dataBundle, signature) {
        return this.post('/add-data', {
            data: dataBundle,
            signature,
        });
    }
    getPersonalDataAsRecipient(dataBundle, signature) {
        return this.get('/get-data-as-recipient', {
            data: dataBundle,
            signature,
        });
    }
    getPersonalDataAsSender(dataBundle, signature) {
        return this.get('/get-data-as-sender', {
            data: dataBundle,
            signature,
        });
    }
}
export default PersonalData;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyc29uYWxEYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vdHMvc3JjL2Jsb2NrY2hhaW4vcGVyc29uYWxEYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sR0FBRyxNQUFNLGlCQUFpQixDQUFDO0FBQ2xDLE9BQU8sS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUUxQixPQUFPLEVBQUMsMkJBQTJCLEVBQUMsTUFBTSxVQUFVLENBQUM7QUFFckQsTUFBTSxZQUFZO0lBR2QsWUFBWSxNQUFpQztRQUN6QyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQTtJQUN4QixDQUFDO0lBRUQsU0FBUyxDQUFDLE1BQTBCO1FBQ2hDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFBO0lBQ3hCLENBQUM7SUFFRCxNQUFNLENBQUMsSUFBWTtRQUNmLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2QsTUFBTSxHQUFHLENBQUMsSUFBSSwyQkFBMkIsQ0FBQywrQkFBK0IsQ0FBQyxDQUFDLENBQUE7U0FDOUU7UUFFRCxPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEdBQUcsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsVUFBVSxDQUFDLENBQUE7SUFDekgsQ0FBQztJQUVELElBQUksQ0FBQyxJQUFZLEVBQUUsSUFBUztRQUN4QixPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBQyxPQUFPLEVBQUUsRUFBQyw2QkFBNkIsRUFBRSxHQUFHLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFDLEVBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUNySixDQUFDO0lBRUQsR0FBRyxDQUFDLElBQVksRUFBRSxNQUFZO1FBQzFCLE9BQU8sS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ2hDLE1BQU0sRUFBRSxNQUFNLElBQUksRUFBRTtZQUNwQixPQUFPLEVBQUUsRUFBQyw2QkFBNkIsRUFBRSxHQUFHLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFDO1NBQ3BGLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDeEIsQ0FBQztJQUVELGdCQUFnQixDQUFDLFVBQWdHLEVBQUUsU0FBaUI7UUFDaEksT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUMxQixJQUFJLEVBQUUsVUFBVTtZQUNoQixTQUFTO1NBQ1osQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVELDBCQUEwQixDQUFDLFVBQWlELEVBQUUsU0FBaUI7UUFDM0YsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLHdCQUF3QixFQUFFO1lBQ3RDLElBQUksRUFBRSxVQUFVO1lBQ2hCLFNBQVM7U0FDWixDQUFDLENBQUE7SUFDTixDQUFDO0lBRUQsdUJBQXVCLENBQUMsVUFBOEMsRUFBRSxTQUFpQjtRQUNyRixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMscUJBQXFCLEVBQUU7WUFDbkMsSUFBSSxFQUFFLFVBQVU7WUFDaEIsU0FBUztTQUNaLENBQUMsQ0FBQTtJQUNOLENBQUM7Q0FDSjtBQUVELGVBQWUsWUFBWSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG9ubyBmcm9tIFwiQGpzZGV2dG9vbHMvb25vXCI7XG5pbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XG5pbXBvcnQge1BlcnNvbmFsRGF0YUNvbmZpZ30gZnJvbSBcIi4vdHlwZXNcIlxuaW1wb3J0IHtQZXJzb25hbERhdGFJc05vdENvbmZpZ3VyZWR9IGZyb20gXCIuL2Vycm9yc1wiO1xuXG5jbGFzcyBQZXJzb25hbERhdGEge1xuICAgIGNvbmZpZzogUGVyc29uYWxEYXRhQ29uZmlnIHwgbnVsbFxuXG4gICAgY29uc3RydWN0b3IoY29uZmlnOiBQZXJzb25hbERhdGFDb25maWcgfCBudWxsKSB7XG4gICAgICAgIHRoaXMuY29uZmlnID0gY29uZmlnXG4gICAgfVxuXG4gICAgc2V0Q29uZmlnKGNvbmZpZzogUGVyc29uYWxEYXRhQ29uZmlnKSB7XG4gICAgICAgIHRoaXMuY29uZmlnID0gY29uZmlnXG4gICAgfVxuXG4gICAgZ2V0VXJsKHBhdGg6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgICAgIGlmICghdGhpcy5jb25maWcpIHtcbiAgICAgICAgICAgIHRocm93IG9ubyhuZXcgUGVyc29uYWxEYXRhSXNOb3RDb25maWd1cmVkKGBwZXJzb25hbCBkYXRhIGNvbmZpZyBpcyBlbXB0eWApKVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGAke3RoaXMuY29uZmlnLmFwaX0ke3BhdGh9YC5yZXBsYWNlKC9cXC9cXC8rL2csICcvJykucmVwbGFjZSgnaHR0cDovJywgJ2h0dHA6Ly8nKS5yZXBsYWNlKCdodHRwczovJywgJ2h0dHBzOi8vJylcbiAgICB9XG5cbiAgICBwb3N0KHBhdGg6IHN0cmluZywgZGF0YTogYW55KSB7XG4gICAgICAgIHJldHVybiBheGlvcy5wb3N0KHRoaXMuZ2V0VXJsKHBhdGgpLCBkYXRhLCB7aGVhZGVyczogeydBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiAnKicsICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbid9fSkudGhlbihyID0+IHIuZGF0YSlcbiAgICB9XG5cbiAgICBnZXQocGF0aDogc3RyaW5nLCBwYXJhbXM/OiBhbnkpIHtcbiAgICAgICAgcmV0dXJuIGF4aW9zLmdldCh0aGlzLmdldFVybChwYXRoKSwge1xuICAgICAgICAgICAgcGFyYW1zOiBwYXJhbXMgfHwge30sXG4gICAgICAgICAgICBoZWFkZXJzOiB7J0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6ICcqJywgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ30sXG4gICAgICAgIH0pLnRoZW4ociA9PiByLmRhdGEpXG4gICAgfVxuXG4gICAgc2VuZFBlcnNvbmFsRGF0YShkYXRhQnVuZGxlOiB7c2VuZGVyUHViOiBzdHJpbmcsIHJlY2lwaWVudFB1Yjogc3RyaW5nLCBzZW5kZXJEYXRhOiBzdHJpbmcsIHJlY2lwaWVudERhdGE6IHN0cmluZ30sIHNpZ25hdHVyZTogc3RyaW5nKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvc3QoJy9hZGQtZGF0YScsIHtcbiAgICAgICAgICAgIGRhdGE6IGRhdGFCdW5kbGUsXG4gICAgICAgICAgICBzaWduYXR1cmUsXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgZ2V0UGVyc29uYWxEYXRhQXNSZWNpcGllbnQoZGF0YUJ1bmRsZToge3JlY2lwaWVudFB1Yjogc3RyaW5nLCBpZHM6IHN0cmluZ1tdfSwgc2lnbmF0dXJlOiBzdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KCcvZ2V0LWRhdGEtYXMtcmVjaXBpZW50Jywge1xuICAgICAgICAgICAgZGF0YTogZGF0YUJ1bmRsZSxcbiAgICAgICAgICAgIHNpZ25hdHVyZSxcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBnZXRQZXJzb25hbERhdGFBc1NlbmRlcihkYXRhQnVuZGxlOiB7c2VuZGVyUHViOiBzdHJpbmcsIGlkczogc3RyaW5nW119LCBzaWduYXR1cmU6IHN0cmluZykge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXQoJy9nZXQtZGF0YS1hcy1zZW5kZXInLCB7XG4gICAgICAgICAgICBkYXRhOiBkYXRhQnVuZGxlLFxuICAgICAgICAgICAgc2lnbmF0dXJlLFxuICAgICAgICB9KVxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUGVyc29uYWxEYXRhOyJdfQ==